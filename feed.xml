<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>慎独</title>
    <description>博学之，审问之，慎思之，明辨之，笃行之
</description>
    <link>http://sleefd.github.io/</link>
    <atom:link href="http://sleefd.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 09 Jan 2015 10:25:48 +0800</pubDate>
    <lastBuildDate>Fri, 09 Jan 2015 10:25:48 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>修改mahout naivebayes test driver遇到问题</title>
        <description>&lt;p&gt;昨天开始修改mahout testnaivebayesdriver的输出。&lt;/p&gt;

&lt;p&gt;看了才知道，原来test job输出的是测试集的正确label值以及每条记录经过
模型判断后得到的score向量。&lt;/p&gt;

&lt;p&gt;要得到经过模型分类的label，需要找到score向量最大值的index，然后通过index
映射到label上。因此testjob有两个重要的输入，一个是train阶段得到的model，
一个是train阶段得到的labelIndex. labelIndex文件存储整数(index)与label的映射.&lt;/p&gt;

&lt;p&gt;我的需求是test阶段的输出文件为模型分类label及对应的向量，也就是一个textfile，
key是text，value也是text。&lt;/p&gt;

&lt;p&gt;因此只需要把mapreduce的输出文件格式改为textfile，key和value都为text，write key
的时候，write模型真实分类的label，write value的时候，将vector dump一下，转为String
格式就ok了。仔细看看代码就能搞定。&lt;/p&gt;

&lt;p&gt;但改完放到集群上面跑的时候却遇到了问题，报错如下：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nl&quot;&gt;Error:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;EOFException&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DataInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readFully&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;197&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DataInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readUTF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;609&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DataInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readUTF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;564&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mahout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VectorWritable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readFields&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VectorWritable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;130&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mahout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VectorWritable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readFields&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VectorWritable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;89&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mahout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VectorWritable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readVector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VectorWritable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;226&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mahout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;naivebayes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NaiveBayesModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;materialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NaiveBayesModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;116&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mahout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;naivebayes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TestNaiveBayesMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestNaiveBayesMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hadoop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapreduce&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Mapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;142&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hadoop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapred&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MapTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;runNewMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MapTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;764&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hadoop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapred&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MapTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MapTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;340&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hadoop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapred&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;YarnChild$2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;YarnChild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;168&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;security&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AccessController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doPrivileged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Native&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;javax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;security&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doAs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;415&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hadoop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;security&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;UserGroupInformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doAs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserGroupInformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1548&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hadoop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapred&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;YarnChild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;YarnChild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;163&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;仔细比对了代码，与原代码没有区别，只是在输出处做了修改。于是直接跑cdh5.3-mahout0.9的testnb job，以seq和mr模式跑都没问题呀。也是醉了。我测试阶段用到的模型是train阶段输出的，train阶段
用的也是cdh。应该没问题呀？仔细看异常，是在namedvector解析处遇到了问题，但我从输入数据开始
都没有用到过namedvector。&lt;/p&gt;

&lt;p&gt;最后想到可能是，我是基于mahout-1.0-snapshot开发的，新代码可能在某些函数上做了修改，虽然代码
看起来一样，但内部实现已经改变了。于是我转为直接用mahout-1.0生成model，然后重新在集群上测试
我的代码，ok了。&lt;/p&gt;

&lt;p&gt;总结：在开源lib上做开发的时候，测试与开发保持相同版本很重要，否则会带来很多意想不到的问题。就
像做app开发一下，一定要做真机测试，不同机型很可能就会有不同问题。&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Jan 2015 23:18:00 +0800</pubDate>
        <link>http://sleefd.github.io/mahout/2015/01/08/testnaivebayes-prob.html</link>
        <guid isPermaLink="true">http://sleefd.github.io/mahout/2015/01/08/testnaivebayes-prob.html</guid>
        
        
        <category>mahout</category>
        
      </item>
    
      <item>
        <title>python scikit-learn安装</title>
        <description>&lt;p&gt;前段时间做mapreduce算法部分设计的时候，正好看过python scikit-learn的api文档，学习了一下它的设计。
最近正好要做算法结果对比，可借机学习一下scikit-learn的使用。&lt;/p&gt;

&lt;p&gt;在64位win8上安装scikit-learn.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;安装python2.7。&lt;/li&gt;
  &lt;li&gt;安装python包管理工具pip。下载get-pip.py,然后执行&lt;code&gt;python get-pip.py&lt;/code&gt;即可. 输入python -m pip，出现一堆pip命令说明，则安装成功。&lt;/li&gt;
  &lt;li&gt;安装scikit-learn. &lt;code&gt;python -m pip install -U scikit-learn&lt;/code&gt; &lt;/li&gt;
  &lt;li&gt;安装numpy. 那么问题就来了。开始同样想通过pip install来安装numpy,但一堆问题。这个命令会下载numpy源码包，然后编译，提示vc++编译器找不到。于是根据提示的下载链接下载
python vc++编译器，重新执行该命令，没问题了，可是该命令一直执行，无任何屏幕输出，卡住了，等了好久都没
结果出现，于是考虑去官网上下载可执行安装包。在sourceforge上numpy主页找到了安装包列表，但只有win32位的，
下载下来准备用win32位试试。可是安装界面找不到python27目录。提示Python27没有注册。
网上搜索下发现原因是32位应用与64位应用的注册表目录不一致，我安装的是64位python，因此32位应用会找不到python27位置，可通过修改注册表解决。
改注册表略麻烦，幸运的在stackoverflow上找到了64位python包的&lt;a href=&quot;http://www.lfd.uci.edu/~gohlke/pythonlibs&quot;&gt;下载列表&lt;/a&gt;，直接下载64位numpy安装包搞定.&lt;/li&gt;
  &lt;li&gt;安装scipy. 同样直接列表下载安装包安装。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;综上，scikit-learn安装问题最后归结为在64位windows上安装numpy与scipy。numpy与scipy本身根据机器做了优化，
因此需要在本机上对源码进行编译，但由于编译出了问题，我直接下载别人提供的unofficial python lib，感谢提供
各个版本python lib下载列表的这位仁兄。&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Jan 2015 22:59:00 +0800</pubDate>
        <link>http://sleefd.github.io/python/2015/01/06/scikit-learn-install.html</link>
        <guid isPermaLink="true">http://sleefd.github.io/python/2015/01/06/scikit-learn-install.html</guid>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>StringBuffer,StringBuilder与线程安全</title>
        <description>&lt;p&gt;java里，String是不可变的序列，immutable，每write一次String，实际上创建了一个新String实例。&lt;/p&gt;

&lt;p&gt;而StringBuffer与StringBuilder存储可变的字符序列，mutable,可在原对象上append, remove, instert字符串。
改变字符串的操作较多时，应该用这两个类代替String类。二者提供的操作函数一致。&lt;/p&gt;

&lt;p&gt;根据api文档， 二者的区别：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;StringBuffer是线程安全的。意味着如果在多线程环境下对它的实例就行操作，不会产生不确定的行为。
StringBuilder不是线程安全的。&lt;/li&gt;
  &lt;li&gt;由于StringBuilder不是线程安全的，StringBuilder效率更高。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 04 Jan 2015 23:56:00 +0800</pubDate>
        <link>http://sleefd.github.io/java/2015/01/04/all-about-string.html</link>
        <guid isPermaLink="true">http://sleefd.github.io/java/2015/01/04/all-about-string.html</guid>
        
        
        <category>java</category>
        
      </item>
    
      <item>
        <title>重新用jekyll写博客</title>
        <description>&lt;p&gt;在windows上安装octopress遇到一些问题，如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;我安装的是ruby2.0，但gemfile.lock中的ffi版本太低，无法本地编译ffi，修改gemfile中的ffi为高版本就可以了。&lt;/li&gt;
  &lt;li&gt;bundle install成功后，rake generate提示iconv找不到, 原来ruby2.0, iconv module被deprecated，没办法，ruby2.0安装octopress不成功，除非修改rakefile，将用到iconv的地方换成其他库。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后决定回归本真，还是用jekyll，ruby2.0直接&lt;code&gt;gem install jekyll&lt;/code&gt;就ok了，无任何问题。&lt;/p&gt;

&lt;p&gt;仔细阅读了下jekyll官网文档，知道了原来github任意repo的ghpage分支也能用来部署website，只要把
website代码push到repo的ghpage分支，然后通过yourname.github.com/repo-name就可以访问到。这样就太好了,
原来的博客可保留在&lt;a href=&quot;http://sleefd.github.com&quot;&gt;sleefd.github.com&lt;/a&gt;链接，新jekyll博客在&lt;a href=&quot;http://sleefd.github.com/newblog&quot;&gt;sleefd.github.com/newblog&lt;/a&gt;。最后我的github repo是这样的:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;repo name: newblog, 于是我可以通过sleefd.gihtub.io/newblog，来访问我新部署的jekyll blog.
remote branch: master与gh-pages,其中gh-pages跟踪_site文件夹的内容,master跟踪其他所有文件夹.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;jekyll使用时遇到的两个问题：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;开始我github新建的repo名字为blog，导致原博客的post无法访问，是因为原博客的post访问链接以sleefd.github.io/blog开始，新jekyll博客也是，名字冲突，改repo名为newblog就好了。&lt;/li&gt;
  &lt;li&gt;jekyll serve 无法在localhost:4000预览博客内容，部署后也无法在newblog链接访问新post内容。看jekyll官网文档解决。修改_config.yml中的baseurl为’/newblog’,启动server命令改为&lt;code&gt;jekyll serve --baseurl &#39;&#39;&lt;/code&gt;即可。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;另外jekyll不像octopress那样, 可以直接执行rake task来创建新post和部署博客到github，于是把Octopress中的Rakefile拿过来改改，就可通过&lt;code&gt;rake post[&#39;title&#39;]&lt;/code&gt;创建新post，通过&lt;code&gt;rake deploy&lt;/code&gt;同步source和gh-pages代码到远程的github repo。附上Rakefile如下：&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/0ec44f5202e4f864e4a5.js&quot;&gt; &lt;/script&gt;

</description>
        <pubDate>Fri, 02 Jan 2015 18:07:00 +0800</pubDate>
        <link>http://sleefd.github.io/2015/01/02/new-jekyll-blog.html</link>
        <guid isPermaLink="true">http://sleefd.github.io/2015/01/02/new-jekyll-blog.html</guid>
        
        
      </item>
    
      <item>
        <title>octopress博客迁移到新电脑</title>
        <description>&lt;p&gt;本来是用octopress写博客，但是上班换了新电脑，需要在新电脑上重新部署octopress。&lt;/p&gt;

&lt;p&gt;首先clone下source分支的代码,然后clone master分支的代码到_deploy文件夹中。master分支存放的是渲染后的博客，source分支存放的是octopress代码以及主题等。github访问xx.github.com，访问的就是该repo下的master分支代码。&lt;/p&gt;

&lt;p&gt;重新部署的时候遇到下面几个问题：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;source分支的代码从来没有上传过， github上只保存有最新的master分支的文件。&lt;/li&gt;
  &lt;li&gt;rake new_post，然后rake deploy之后，_deploy文件夹被清空，然后重新生成，导致原来的所有post遗失。&lt;/li&gt;
  &lt;li&gt;所有post的markdown文件遗失，无法重新生成所有的html文件。如果源markdown没有遗失，啥事都没有，哎。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;尝试过这样一些解决方法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;修改Rakefile，修改push task，每次push都不删除deploy文件，不行。因为new_post会产生新的index.html和sitemap，虽然保留有旧的post html，但没法从index.html访问到。&lt;/li&gt;
  &lt;li&gt;复制deploy中的文件到source文件夹中，因为source文件夹缺少一些资源，还是不行。rake generate的时候，没有更新index.html。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;稍后有时间再试一试方法2，可以先把资源拷贝到source里面，然后修改index，保有原来的post链接，新链接可添加在index里面。如果还是不行的话，就只能写个脚本调用pandoc将html转化成markdown，然后再把所有post的markdown丢到soure的post文件夹下面了。&lt;/p&gt;

&lt;p&gt;这次重新deploy帮助review了好多东西，首先是github的基本概念，然后是branch的基本操作，remote的基本操作,怎样阅读diff文件等等。决定抽时间看git pro，系统的学习一下git的操作。&lt;/p&gt;
</description>
        <pubDate>Tue, 30 Dec 2014 04:35:27 +0800</pubDate>
        <link>http://sleefd.github.io/jekyll/update/2014/12/30/move-octopress.html</link>
        <guid isPermaLink="true">http://sleefd.github.io/jekyll/update/2014/12/30/move-octopress.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
